Create a new contact
@app.route('/create_contact', methods=['POST'])
def create_contact():
    data = request.json
    new_contact = Contact(
        phoneNumber=data['phoneNumber'],
        email=data['email'],
        linkedId=data.get('linkedId'),
        linkPrecedence=data['linkPrecedence']
    )

    db.session.add(new_contact)
    db.session.commit()

    return jsonify({'message': 'Contact created successfully'})


# Retrieve all contacts
@app.route('/get_contacts', methods=['GET'])
def get_contacts():
    contacts = Contact.query.all()

    contact_list = [
        {
            'id': contact.id,
            'phoneNumber': contact.phoneNumber,
            'email': contact.email,
            'linkedId': contact.linkedId,
            'linkPrecedence': contact.linkPrecedence
        }
        for contact in contacts
    ]
    return jsonify(contact_list)


# Update a contact
@app.route('/update_contact/<int:contact_id>', methods=['PUT'])
def update_contact(contact_id):
    data = request.json

    contact = Contact.query.get(contact_id)
    if contact:
        contact.phoneNumber = data['phoneNumber']
        contact.email = data['email']
        contact.linkedId = data.get('linkedId')
        contact.linkPrecedence = data['linkPrecedence']
        db.session.commit()
        return jsonify({'message': 'Contact updated successfully'})
    else:
        return jsonify({'message': 'Contact not found'})


# Delete a contact
@app.route('/delete_contact/<int:contact_id>', methods=['DELETE'])
def delete_contact(contact_id):
    contact = Contact.query.get(contact_id)
    if contact:
        db.session.delete(contact)
        db.session.commit()
        return jsonify({'message': 'Contact deleted successfully'})
    else:
        return jsonify({'message': 'Contact not found'})
